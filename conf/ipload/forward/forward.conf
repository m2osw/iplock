# Forward Packets

# If you have a local network (LAN) and want to allow your LAN computers
# to access the Internet without allowing them to access the router itself
# then using FORWARDing and MASQUERADing is the easiest way.
#
#     +------------+       +----------+       +----------------+
#     |            |       |          |       |                |
#     |  Internet  +<----->+  Router  +<----->+  LAN Computer  |
#     |            |       |          |  LAN  |                |
#     +------------+       +----------+       +----------------+
#
# On the Router you set FORWARD rules that send traffic from your private
# LAN interface to the public Internet connection. Data coming back marked
# as coming from a private LAN interface and on an established connection
# can be sent back to that LAN computer.
#
# Any other incoming packets are dropped.
#
# Keep in mind also that the FORWARD chain calls the `bad_packets` chain
# first so many packets are dropped at that point. You must make sure that
# the private IP addresses of the computer you want to allow through the
# forwarding/masquerading mechanism are not blocked there.
#
# The forwarding setup includes three parts:
#
#   1) in the FORWARD chain where we forward packets from the Internet to
#      the private interface (LAN)
#
#         -A FORWARD -i <public-interface> -o <private-interface> -p tcp -m state --state ESTABLISHED,RELATED -m tcp ! -s <gateway> -d <lan-ip> ! --syn -j ACCEPT
#         -A FORWARD -i <public-interface> -o <private-interface> -p udp -m state --state ESTABLISHED,RELATED -m udp ! -s <gateway> -d <lan-ip> -j ACCEPT
#         -A FORWARD -i <public-interface> -o <private-interface> -p icmp -m icmp --icmp-type any ! -s <gateway> -d <lan-ip> -j ACCEPT
#
#   2) in the FORWARD chain where we accept any outgoing traffic which we
#      redirect from the private interface (LAN) to the Internet
#
#         -A FORWARD -i <private-interface> -o <public-interface> -p tcp -m tcp -s <lan-ip> -j ACCEPT
#         -A FORWARD -i <private-interface> -o <public-interface> -p udp -m udp -s <lan-ip> -j ACCEPT
#         -A FORWARD -i <private-interface> -o <public-interface> -p icmp -m icmp --icmp-type any -s <lan-ip> -j ACCEPT
#
#      note that the <lan-ip> addresses can include a mask (i.e. 10.0.7.0/24).
#
#   3) in the NAT table POSTROUTING chain where we redirect packets coming
#      out of your LAN computer to the Internet.
#
#         -A POSTROUTING -o <public-interface> -s <lan-ip> -j MASQUERADE
#


[variables]
# allow_forwarding=|open|limited
#
# Whether to have forwarding setup or not.
#
# 1. empty string
#
# By default, this feature is turned off. The value in this case is the
# empty string ("not set").
#
# 2. "open"
#
# If `allow_forwarding` is set to "open", then no tests are performed on IPs.
# In this case, the public and private interfaces are used. It defines how
# the traffic gets forwarded.
#
# 3. "limited"
#
# If `allow_forwarding` is set to "limited", then the `gateway_ip` and
# `lan_ips` get used. Only those IPs can participate in the forwarding.
# Tne `gateway_ip` is the source (in general, the IP address of the
# computer connected to the Internet). The LAN IPs are the computers on
# your LAN which you want to have access to your Internet connection. The
# public and private interfaces correspond to the interfaces used to
# connect to the Internet (public) and the interface used to connect to
# the LAN computers (private). The two can use the same interface, but
# then it's not safe at all. It is very strongly recommanded that you
# make use of two physically separate network interfaces.
#
allow_forwarding=limited
forward_public_interface=eno1
forward_private_interface=eno2
gateway_ip=192.168.2.1
lan_ips=192.168.2.38, \
	192.168.2.91, \
	192.168.2.92, \
	192.168.2.93, \
	192.168.2.94, \
	192.168.2.95, \
	192.168.2.96, \
	192.168.2.128/26



[rule::forward_packet_in]
section = content
chains = FORWARD
condition = '"${allow_forwarding}" == "open"'
source_interface = ${forward_public_interface}
destination_interface = ${forward_private_interface}
protocols = tcp, udp, icmp, icmpv6
states = any
action = ACCEPT

[rule::forward_packet_out]
section = content
chains = FORWARD
condition = '"${allow_forwarding}" == "open"'
source_interface = ${forward_private_interface}
destination_interface = ${forward_public_interface}
protocols = tcp, udp, icmp, icmpv6
states = any
action = ACCEPT

#[rule::masquerade]
#chain = INPUT
#condition = '"${allow_forwarding}" == "limited"'
#source = 192.168.2.99
#destination = ! 10.0.2.0/24
#action = MASQUERADE

[rule::masquerade_open]
table = nat
chain = POSTROUTING
condition = '"${allow_forwarding}" == "open"'
destination_interface = ${forward_public_interface}
action = MASQUERADE

[rule::masquerade_limited]
table = nat
chain = POSTROUTING
condition = '"${allow_forwarding}" == "limited"'
sources = ${lan_ips}
destination_interface = ${forward_public_interface}
action = MASQUERADE

#[rule::established_forward]
#section = early_content
#chains = FORWARD
#source_interfaces = ${public_interfaces}
#destination_interfaces = ${private_interfaces}
#except_sources = ${gateway}
#destinations = ${local_networks}
#protocols = tcp, udp
#state = established | related | !new
#action = ACCEPT

[rule::forward_packets_in]
chain = FORWARD
condition = '"${allow_forwarding}" == "limited"'
source_interface = ${forward_public_interface}
destination_interface = ${forward_private_interface}
except_source = ${gateway_ip}
destination = ${lan_ips}
protocols = tcp, udp
states = established | related | !new
action = ACCEPT

[rule::forward_packets_out]
chain = FORWARD
condition = '"${allow_forwarding}" == "limited"'
source_interface = ${forward_private_interface}
destination_interface = ${forward_public_interface}
sources = ${lan_ips}
protocols = tcp, udp
action = ACCEPT

[rule::forward_icmp_packets_in]
chain = FORWARD
condition = '"${allow_forwarding}" == "limited"'
except_source = ${gateway_ip}
source_interface = ${forward_public_interface}
destination_interface = ${forward_private_interface}
destination = ${lan_ips}
protocols = icmp, icmpv6
states = any
action = ACCEPT

[rule::forward_icmp_packets_out]
chain = FORWARD
condition = '"${allow_forwarding}" == "limited"'
source_interface = ${forward_public_interface}
destination_interface = ${forward_private_interface}
source = ${lan_ips}
protocols = icmp, icmpv6
states = any
action = ACCEPT

# vim: syntax=dosini
