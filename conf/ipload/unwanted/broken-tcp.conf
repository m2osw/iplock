# Broken TCP Requests

# Just drop INVALID packets
#
[rule::invalid_packet]
section = header
chains = INPUT
interfaces = ${public_interfaces}
states = invalid
action = DROP

# I used the following two rules before I created ipload.
#
# From my research once I got ipload running, it does not look like it is
# useful at all. First of all, those so called invalid packets happen all
# the time (thousands upon thousands) but only if caught before the
# ESTABLISHED,RELATED rule. At this point, it looks like these are really
# totally useless and the state INVALID (invalid_packet above) should be
# more than enough to prevent TCP attacks from "broken" packets.

## # ACK, RST, FIN|ACK and PSH|ACK happen from legitimate IPs, when they are not
## # properly established connections; however, logging such is not useful
## 
## # If it comes from the outside, drop those packets
## #
## [rule::broken_tcp_public]
## section = early_content
## chains = INPUT
## after = established_input
## interfaces = ${public_interfaces}
## set = broken_tcp_public
## set_data = ${public_ips}
## #destinations = ${public_ips}
## protocols = tcp
## # The extended does not seem to happen
## #states = all=none, ack, rst, rst|syn=rst|syn, fin|ack, fin=fin|ack, fin|syn=fin|syn, fin|rst=fin|rst, psh|ack, psh=ack|psh, urg=ack|urg
## # The non-extended happen all the time BEFORE the related/established rule
## states = ack, rst, fin|ack, psh|ack
## action = DROP
##
##
## # If it comes from the LAN, just reject those packets
## #
## [rule::broken_tcp_private]
## section = early_content
## chains = INPUT
## after = established_input
## interfaces = ${private_interfaces}
## set = broken_tcp_private
## set_type = hash:net
## set_data = ${private_networks}
## #destinations = ${private_networks}
## protocols = tcp
## # The extended does not seem to happen
## #states = all=none, ack, rst, rst|syn=rst|syn, fin|ack, fin=fin|ack, fin|syn=fin|syn, fin|rst=fin|rst, psh|ack, psh=ack|psh, urg=ack|urg
## # The non-extended happen all the time BEFORE the related/established rule
## states = ack, rst, fin|ack, psh|ack
## action = REJECT adm-prohibited

# vim: syntax=dosini
