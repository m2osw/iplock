# Bad TCP Packets

[rule::bad_packets_call]
section = early_content
chains = INPUT, FORWARD
action = CALL bad_packets

# Expected Packets with IPs that are likely blocked further down this chain
[rule::allowed_packets]
section = early_content
chain = bad_packets
sources = ${local_networks}
action = RETURN

# List of IP addresses that do not make sense if coming from the outside
# of your network (we already allowed your network above)
#
#      IPv4
#
#    0.0.0.0/8 -- Software/Current Network
#    10.0.0.0/8 -- Private Network
#    100.64.0.0/10 -- Private Network
#    172.16.0.0/12 -- Private Network
#    192.0.0.0/24 -- Private Network
#    192.0.2.0/24 -- Documentation
#    192.88.99.0/24 -- Reserved
#    192.168.0.0/16 -- Private Network
#    198.18.0.0/15 -- Private Network
#    198.51.100.0/24 -- Documentation
#    203.0.113.0/24 -- Documentation
#    233.252.0.0/24 -- Documentation
#    240.0.0.0/4 -- Reserved
#
#      IPv6
#
#    ::/128 -- Unspecified address
#    ::/96 -- IPv4 to IPv6 address, deprecated by RFC 4291
#    ::/8 -- Loopback / Embedded IPv4
#    ::ffff:0.0.0.0/96 -- IPv4 to IPv6 address
#    ::ffff:0000:0000:0000/80 -- IPv4 to IPv6 address
#    ::224.0.0.0/100 -- IPv4 to IPv6 address
#    ::127.0.0.0/104 -- IPv4 to IPv6 address
#    ::255.0.0.0/104 -- IPv4 to IPv6 address
#    0200::/7 -- Deprecated by RFC 4048 (OSI NSAP)
#    3ffe::/16 -- 6bone, decommissioned
#    2001:db8::/32 -- Documentation
#    2002:e000::/20 -- IPv6 to IPv4 (IPv4 multicast)
#    2002:7f00::/24 -- IPv6 to IPv4 (IPv4 loopback)
#    2002:0000::/24 -- IPv6 to IPv4 (IPv4 default)
#    2002:ff00::/24 -- IPv6 to IPv4
#    2002:0a00::/24 -- IPv6 to IPv4 (Private Network 10.0.0.0/8)
#    2002:ac10::/28 -- IPv6 to IPv4 (Private Network 172.16.0.0/12)
#    2002:c0a8::/32 -- IPv6 to IPv4 (Private Network 192.168.0.0/16)
#    fc00::/7 -- Unicast Unique Local Address (ULA) -- RFC 4193
#    fe80::/10 -- Link-local Unicast
#    fec0::/10 -- Site-local Unicas -- deprecated by RFC 3879
#    ff00::/8 -- Multicast
#
[rule::bad_packets_block]
section = content
chains = bad_packets
sources = \
    0.0.0.0/8, \
    10.0.0.0/8, \
    100.64.0.0/10, \
    172.16.0.0/12, \
    192.0.0.0/24, \
    192.0.2.0/24, \
    192.88.99.0/24, \
    192.168.0.0/16, \
    198.18.0.0/15, \
    198.51.100.0/24, \
    203.0.113.0/24, \
    233.252.0.0/24, \
    240.0.0.0/4, \
    ::/128, \
    ::/96, \
    ::/8, \
    ::ffff:0.0.0.0/96, \
    ::ffff:0000:0000:0000/80, \
    ::224.0.0.0/100, \
    ::127.0.0.0/104, \
    ::255.0.0.0/104, \
    0200::/7, \
    3ffe::/16, \
    2001:db8::/32, \
    2002:e000::/20, \
    2002:7f00::/24, \
    2002:0000::/24, \
    2002:ff00::/24, \
    2002:0a00::/24, \
    2002:ac10::/28, \
    2002:c0a8::/32, \
    fc00::/7, \
    fe80::/10, \
    fec0::/10, \
    ff00::/8
action = DROP
log = bad_packets

# vim: syntax=dosini
