# SYN Flood (too many attempts at connecting in a row)
#
# The use of recent is not really well adapted for
#   (1) it does not block the first 'N' SYN from going through
#   (2) the recent module is limited to 100 IPs (and since it's a linked list
#       you do not want to increase that number)
#
# Here is a better solution which we'll implement at some point:
# https://www.redhat.com/en/blog/mitigate-tcp-syn-flood-attacks-red-hat-enterprise-linux-7-beta
#
# A simple solution to test as well:
# https://unix.stackexchange.com/questions/651646
#
# -N syn_flood
# -A INPUT -p tcp --syn -j syn_flood
# -A syn_flood -m limit --limit 10/s --limit-burst 10 -j RETURN
# -A syn_flood -j DROP
#
# I think that the -m limit uses the conntrak data. If so then we at least
# can avoid the issue of the 100 limit with -m recent.

[rule::clear_syn_flood]
table = filter
chain = unwanted
section = early_content
recent = check synflood 15s reap
action = NONE
description = "Clear the SYN flood list of old entries."

[rule::syn_flood]
table = filter
chain = unwanted
section = early_content
after = clear_syn_flood
protocol = tcp
state = new
recent = set synflood, check synflood 25 15s
action = CALL add_to_denylist
description = "Prevent SYN flood DDoS attacks--half-opened TCP connections consume resources."

[rule::syn_flood_size]
table = mangle
chain = PREROUTING
protocol = tcp
state = new | tcpmss ! 536-65535
action = DROP
description = "Block new TCP packets that are too small."

# vim: syntax=dosini
