# Common variables supported in the default firewall configuration files
#
# More variables are found in specific files such as the forward.conf and
# ssh.conf. Those variables are only used by those files hence the location.
#
# You must override the variables within the corresponding file such as:
#
#     /etc/iplock/ipload/general/ipload.d/50-variables.conf
#     /etc/iplock/ipload/forward/ipload.d/50-forward.conf
#     /etc/iplock/ipload/services/ipload.d/50-ssh.conf
#

[variables]

# public_interfaces=<interface>[, <interface>, ...]
#
# The public interfaces are all of your interfaces connected to your
# Internet router.
#
# Public interfaces have nearly all incoming (INPUT) traffic blocked
# with a DROP rule. Only the very few services you want to work from
# the outside should pearce a hole in the firewall.
#
# By default this parameter is `<empty>`. You must override this value
# with your own as this interface has to be defined.
#
# Default: <empty>
public_interfaces=


# public_ips=<ip>[, <ip>, ...]
#
# The IP address of your connection to the Internet. If you are behind a
# router, that address may be 192.168.1.1.
#
# If you have a static address at home, it is likely that you received 4
# or more IPs. All of them should be defined here. You may use a mask.
# For example 10.10.10.232/30.
#
# These days, on a server at an ISP, you generally have only get one static
# IP address.
#
# Default: <empty>
public_ips=


# private_interfaces=<interface>[, <interface>, ...]
#
# If you want to have a safe LAN, then you need at least two physical
# interfaces. The interfaces not connected to the Internet should all be
# listed in the `private_interfaces` variables.
#
# If you have an interface which is not connected to the internet and also
# not usable as a private interface, you should list it as a
# `blocked_interfaces` (see `unwanted/block-interfaces.conf`).
#
# Note that virtual interfaces (i.e. `vtun0`) are generally automatically
# managed by the system that create them. You can add them as
# `private_interfaces`, but that may have some side effects without
# additional work on your firewall.
#
# The private interface is more foregiving for traffic going through, but
# it goes not get wide opened. Connections coming from other computers
# on your LAN must still be explicitly authorized to access  services
# your main server.
#
# Default: <empty>
private_interfaces=


# live_interfaces=<interface>[, <interface>, ...]
#
# A list of all the live interfaces. Interfaces that have traffic running
# through them.
#
# By default, this parameter is set to your lists of public and private
# interfaces.
#
# If you have virtual interfaces (i.e. `vtun0`), you may find it useful
# to add them here. In most likelihood, though, the tools creating those
# interfaces automatically handle the firewall to open necessary ports.
#
# Default: ${public_interfaces}, ${private_interfaces}
live_interfaces=${public_interfaces}, ${private_interfaces}


# gateway_interface=<interface>
#
# In most cases, the gateway interface is the same interface as your
# public interfaces (and it defaults to that).
#
# However, in some rare cases you may setup your computer with multiple
# interfaces. In that special case, you want to define which of those
# interfaces should be viewed as the gateway.
#
# TODO: unfortunately, at the moment we do not have a way to determine
#       that more than one interface is listed in the ${public_interfaces}
#       variable; at some point I'd like to have a way to select the first
#       element which would resolve this issue for 99% of those cases
#
# Note: this is used as the default interface for the
#       `forward_public_interface` variable; this is generally correct
#       since you want your LAN traffic to be forwarded to the Internet
#       which is defined in the public interface
#
# Default: ${public_interfaces}
gateway_interface=${public_interfaces}


# gateway=<address>
#
# The IP address of your gateway to the Internet (or "public gateway").
# This is the IP address where your traffic is set to go to the Internet.
# It may be the IP address that connects your server to the your external
# router.
#
# This parameter is mandatory, but the default is `<empty>`. it's up to
# you to override this value in your own .conf file. It has to be defined
# to a valid IP address.
#
# Note: at the moment we do not plan in supporting an IPv4 and an IPv6
#       gateway. You should use one or the other.
#
# Default: <empty>
gateway=


# private_networks=<network>[, <network>, ...]
#
# A list of private networks or IP addresses that are allowed on your LAN.
# These computers will have much easier access and their IPs should not get
# added to the denylist set.
#
# If you do not allow any other computers on the LAN (i.e. you have one
# single server with an ISP), then this variable can remain empty. At home,
# you may not want your server to be accessible by other computers in which
# can you would also keep this parameter empty. On the other hand, if you
# want your server to be accessible by other computers, their network should
# be added here. Note that the rules to what those server can connect to
# remain the same. In other words, if you only open ports to connect to
# a webserver, then only that webserver will be accessible.
#
# Default: <empty>
private_networks=



# List of system variable that must be assgned a value other than <empty>
[verify]
public_interfaces=required


# vim: syntax=dosini
