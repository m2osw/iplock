# Global Parameters

# Log Introducer
#
# The introducer for all log messages. This is used by the rsyslog configuration
# file "conf/01-iptables.conf" (installed under `/etc/rsyslog.d/...`)
#
log_introducer = "[iptables]"


# Create a set
#
# When the set includes an IP address (i.e. "ip" or "net"), then we create
# one for IPv4 and one for IPv6. Otherwise, just one set is created. See
# the '[name]' parameter for additional details.
#
# The '[name]' parameter is replaced by the name of the set being created.
# Note that the name of the IPv4 set has '_ipv4' appended.
# Similarly note that the name of the IPv6 set has '_ipv6' appended.
#
# The '[type]' parameter is replaced by the type of set necessary. By
# default, 'hash:ip' is used. Other types can be used when appropriate.
#
create_set=/sbin/ipset create [name] [type] -exist
create_set_ipv4=/sbin/ipset create [name] [type] family inet -exist
create_set_ipv6=/sbin/ipset create [name] [type] family inet6 -exist


# Load data to a set
#
# In order to load data to a set, we use the `restore` command and then
# produce a list of `add ...` commands as defined in the `add_to_set`
# variables.
#
# The command here uses the -! to avoid errors on duplicates (that means
# duplicates are silently ignored). 99% of the time, this is just fine a
# you avoid many errors.
#
load_to_set=/sbin/ipset restore -!
load_to_set_ipv4=/sbin/ipset restore -!
load_to_set_ipv6=/sbin/ipset restore -!


# Add data to a set
#
# The '[name]' parameter is replaced by the name of the set in which data is
# being added.
#
# The '[params]' are the parameters as defined in the 'set_data = ...'
# variable definition found in the rule.
#
# Note that this is expected to be used with the load_to_set command. It
# defines the commands to add to `stdin`. If you'd like, this is similar
# to doing the following steps:
#
#     echo "add <name> <params>" > /tmp/set.rules
#     echo "add <name> <params>" > /tmp/set.rules
#     ...
#     echo "add <name> <params>" > /tmp/set.rules
#     cat /tmp/set.rules | /sbin/ipset restore -!
#
# This is much faster than trying to add ipset data with the add command
# one line at a time (a lot faster, in my small test it was 36x faster).
#
add_to_set=add [name] [params]
add_to_set_ipv4=add [name] [params]
add_to_set_ipv6=add [name] [params]


# Remove a user defined chain
#
# The '[name]' parameter is replaced by the name of the user defined chain.
# We use this function in the --flush command after removing all the rules
# (iptables --flush) and reset of the system chain policies.
#
remove_user_chain=if /sbin/iptables --table [table] --numeric --list [name] >/dev/null 2>&1; then /sbin/iptables --table [table] --delete-chain [name]; else exit 0; fi


# Whether empty tables are to be used
#
# The chain logs are not generated for empty tables. If you do want to
# get logs for all the available iptables, then you need to set this value
# to true.
#
output_empty_tables=false


# vim: syntax=dosini
