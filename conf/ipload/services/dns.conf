# DNS messages

[variables]

# dns_ports=<port>[, <port>, ...]
#
# The list of DNS ports your DNS server opens and listens to.
#
# In most cases, this is 53. Some newer systems also make use of 5353.
# By default we only offer 53.
#
# Default: 53
dns_ports=53


# secondary_dns_ips=<ip>[, <ip>, ...]
#
# The IP addresses of all your secondary DNS servers. These servers contact
# the master server using port 53. Here we open that port for those servers.
# Since these servers have to have a static IP address, there should be no
# issues with these IP addresses.
#
# This field is mandatory if you have secondary DNS servers.
#
# Default: <empty>
secondary_dns_ips=



[rule::dns_udp_secondary]
chains = INPUT
section = early_content
after = unwanted_call
before = small_ports
condition = '"${dns_ports}" != "" && "${secondary_dns_ips}" != ""'
source_interfaces = ${public_interfaces}, ${private_interfaces}
sources = ${secondary_dns_ips}
source_ports = ${dns_ports}
destination_ports = ${dns_ports}
protocols = udp
state = new
action = ACCEPT
description = "Authorize the secondary DNS to access the primary using port 53."

[rule::dns_udp]
chains = INPUT
condition = '"${dns_ports}" != ""'
source_interfaces = ${public_interfaces}, ${private_interfaces}
destination_ports = ${dns_ports}
protocols = udp
state = new
action = ACCEPT
description = "Accept connections to the DNS service."

[rule::dns_tcp]
chains = INPUT
after = dns_udp
condition = '"${dns_ports}" != ""'
source_interfaces = ${public_interfaces}, ${private_interfaces}
destination_ports = ${dns_ports}
protocols = tcp
state = new
action = ACCEPT

# vim: syntax=dosini
