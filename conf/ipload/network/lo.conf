# lo interface

[variables]

# local_interface=<interface>
#
# Define the name of the local interface. Likely always 'lo'.
#
# Default: lo
local_interface=lo


# local_ips=<ip address>[, <ip address>, ...]
#
# By default, most local traffic goes over the 127.0.0.1 and ::1 IP
# addresses. However, other IPs are often used for local traffic and
# this is where this variable comes in.
#
# The other local IP addresses. One computer can be assigned many IP
# addresses and it may be useful to accept `lo` traffic on those IP
# addresses.
#
# For example, my main server has IP addresses like the following:
#
#  * 192.168.0.1 -- IP address to communicate with the Internet router
#  * 10.0.0.1 -- IP address to communicate with controlled devices
#                (i.e. an NVidia Jetson, a Raspberry Pi, etc.)
#  * 192.168.200.1 -- IP address to communicate with my LAN computer
#                     (i.e. my wife's computer, my children computers,
#                     my other LAN computers, the printer)
#
# In most likelihood, all the IP addresses you assigned to your interfaces
# to allow access to other computers are to be listed here. If you have a
# static IP address, you may also need to include it here. Note that it is
# unlikely that all those IP addresses end with .1 at the end, but it is
# often the case (convention) for a main server to use that IP.
#
# Without those IP addresses, the `rule::lo` is likely to block
# a lot of traffic that you certainly do not want to block.
#
# Default: <empty>
local_ips=


[verify]
local_interface=required


# Allow local network as expected
[rule::lo]
section = header
chains = INPUT, OUTPUT
after = invalid_packet
interfaces = ${local_interface}
destinations = 127.0.0.0/8, ::1, ${local_ips}
action = ACCEPT

# Block anything else
[rule::lo_block]
section = header
after = lo
chains = INPUT, OUTPUT
interfaces = ${local_interface}
action = REJECT

# vim: syntax=dosini
