#!/bin/sh -e
#
# This script counts the number of entries in the unwanted chain of iptables

if test "`whoami`" != "root"
then
        echo "error: root access is required, try 'sudo $0' instead"
        exit 1
fi

CHAIN=unwanted

if test -n "$1"
then
    CHAIN="$1"
fi

TMPDATA=/tmp/count.txt

# Retrieve the data once (otherwise our counters could be wrong)
#
# We ignore the first two lines which are headers and any line with the RETURN
# target (since those are not IPs being blocked).
#
(
    umask 077
    iptables -w -nvx -L "${CHAIN}" | sed -e '1,2 d' | grep -v " RETURN " > ${TMPDATA}
)

# First we count the number of entries
#
# WARNING: `wc -l ${TMPDATA}` returns '<count> <filename>', so keep pipe!
#
COUNT=`cat ${TMPDATA} | wc -l`

# Then we sum column 1, which represents the total number of hits since the
# block of those IPs occurred
#
HITS=`awk '{s+=$1} END {print s}' ${TMPDATA}`

# Then we sum column 2, which represents the total number of bytes received
# since the block of those IPs occurred
#
BYTES=`awk '{s+=$2} END {print s}' ${TMPDATA}`

rm -f ${TMPDATA}

# Compute the average number of hits per IP
#
if test $COUNT -gt 0
then
    IP_AVERAGE=`echo "scale = 3\n$HITS / $COUNT" | bc`
else
    IP_AVERAGE=0.0
fi

# Compute the average number of bytes per hit
#
if test $HITS -gt 0
then
    BYTE_AVERAGE=`echo "scale = 3\n$BYTES / $HITS" | bc`
else
    BYTE_AVERAGE=0.0
fi

# Display the results
#
printf "IP addresses: .... %11d\n" $COUNT
printf "Hits: ............ %11d\n" $HITS
printf "Hits per IP: ..... %15.3f\n" $IP_AVERAGE
printf "Bytes: ........... %11d\n" $BYTES
printf "Bytes per hit: ... %15.3f\n" $BYTE_AVERAGE

# vim: ts=4 sw=4 et
